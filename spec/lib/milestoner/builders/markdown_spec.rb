# frozen_string_literal: true

require "dry/monads"
require "spec_helper"

RSpec.describe Milestoner::Builders::Markdown do
  include Dry::Monads[:result]

  using Refinements::Pathname

  subject(:builder) { described_class.new enricher: }

  include_context "with application dependencies"
  include_context "with enriched commit"

  let(:enricher) { instance_double Milestoner::Commits::Enricher, call: Success([commit]) }

  describe "#call" do
    let(:content) { temp_dir.join("index.md").read }

    it "creates root path when missing" do
      temp_dir.delete
      expect(builder.call.exist?).to be(true)
    end

    it "includes Markdown logo when present" do
      builder.call

      expect(content).to include(
        %(<img src="https://undefined.io/assets/media/projects/milestoner/logo.png" ) +
        %(alt="Logo" width="100" height="100">)
      )
    end

    it "doesn't include Markdown logo when not present" do
      settings.project_uri_logo = nil
      builder.call

      expect(content).not_to match(/img/)
    end

    it "includes label and version" do
      builder.call
      expect(content).to include("# [Test](https://undefined.io/projects/milestoner) 1.2.3")
    end

    it "includes date" do
      builder.call
      expect(content).to match(/\(\d{4}-\d{2}-\d{2}\)/)
    end

    it "renders commits with stats" do
      builder.call

      expect(content).to include(<<~BODY)
        - ðŸŸ¢ Added documentation - *Zoe Washburne*

        **1 commit. 2 files. 10 deletions. 5 insertions.**
      BODY
    end

    context "without commits" do
      let(:enricher) { instance_double Milestoner::Commits::Enricher, call: Success([]) }

      it "renders zero stats" do
        builder.call
        expect(content).to include("*0 commits. 0 files. 0 deletions. 0 insertions.*")
      end
    end

    it "includes generator" do
      builder.call

      expect(content).to include(
        "*Generated by [Milestoner 3.2.1](https://alchemists.io/projects/milestoner).*"
      )
    end

    it "answers default build path" do
      expect(builder.call).to eq(temp_dir.join("index.md"))
    end

    it "answers custom build path" do
      settings.build_basename = "test"
      expect(builder.call).to eq(temp_dir.join("test.md"))
    end
  end
end
