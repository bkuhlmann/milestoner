# frozen_string_literal: true

require "dry/monads"
require "spec_helper"

RSpec.describe Milestoner::Builders::Site::Pager do
  include Dry::Monads[:result]

  using Refinements::Pathname
  using Refinements::Struct

  subject(:builder) { described_class.new }

  include_context "with application dependencies"
  include_context "with enriched tag"

  describe "#call" do
    let(:path) { temp_dir.join "0.1.0/index.html" }
    let(:past) { tag.with version: "0.0.0" }
    let(:present) { tag.with version: "0.1.0" }
    let(:future) { tag.with version: "1.0.0" }

    it "includes title" do
      builder.call past, present, future
      expect(path.read).to include("<title>Test 0.1.0 | Undefined</title>")
    end

    it "includes description meta" do
      builder.call past, present, future
      expect(path.read).to include(%(<meta name="description" content="A test.">))
    end

    it "includes author meta" do
      builder.call past, present, future
      expect(path.read).to include(%(<meta name="author" content="Tester">))
    end

    it "includes generator meta" do
      builder.call past, present, future
      expect(path.read).to include(%(<meta name="generator" content="Milestoner 3.2.1">))
    end

    it "includes stylesheet" do
      builder.call past, present, future
      expect(path.read).to include(%(href="../page.css"))
    end

    it "includes logo when present" do
      settings.project_uri_logo = "https://acme.io/logo.png"
      builder.call past, present, future

      expect(path.read).to include(
        %(<img src="https://acme.io/logo.png" alt="Logo" width="100" height="100">)
      )
    end

    it "doesn't include logo when not present" do
      settings.project_uri_logo = nil
      builder.call past, present, future

      expect(path.read).not_to include(
        %(<img src="https://undefined.io/assets/media/projects/milestoner/logo.png" ) +
        %(alt="Logo" width="30" height="30">)
      )
    end

    it "includes versions index link when enabled" do
      builder.call past, present, future
      expect(path.read).to include("Versions")
    end

    it "excludes versions index link when disabled" do
      settings.build_index = false
      builder.call past, present, future

      expect(path.read).not_to include("Versions")
    end

    it "renders owner" do
      builder.call past, present, future
      expect(path.read).to include(%(<div class="owner">))
    end

    it "doesn't render owner when tags have no commits" do
      tag.commits.clear
      builder.call past, present, future

      expect(path.read).not_to include(%(<div class="owner">))
    end

    it "renders message" do
      builder.call past, present, future

      content = <<~CONTENT.gsub(/^(?=\s*(<|\w))/, "    ").sub("\n    \n", "\n\n")
        <div class="message">
          <h1 class="bar">Message</h1>
          <div class="content">
            For <a href="https://asciidoctor.org" rel="nofollow">ASCII Doc</a>.

          </div>
        </div>
      CONTENT

      expect(path.read).to include(content)
    end

    it "renders notes" do
      builder.call past, present, future

      content = <<~CONTENT.gsub(/^(?=\s*(<|\w))/, "    ").sub("\n    \n", "\n\n")
        <div class="notes">
          <h2 class="bar">Notes</h2>
          <div class="content">
            For <a href="https://asciidoctor.org" rel="nofollow">ASCII Doc</a>.

          </div>
        </div>
      CONTENT

      expect(path.read).to include(content)
    end

    it "renders valid when signature exists" do
      builder.call past, present, future
      expect(path.read).to include("ðŸ”’ Tag (secure)")
    end

    it "renders invalid when signature doesn't exist" do
      tag.signature = nil
      builder.call past, present, future

      expect(path.read).to include("ðŸ”“ Tag (insecure)")
    end

    it "renders totals" do
      builder.call past, present, future

      expect(path.read).to match(
        /
          1\scommit.+2\sfiles.+10\sdeletions.+5\sinsertions.+
          5\shours.+5\sminutes.+and\s5\sseconds
        /xm
      )
    end

    it "renders zero totals with no commits" do
      present = Milestoner::Models::Tag[commits: [], version: "0.1.0"]
      builder.call past, present, future

      expect(path.read).to match(
        /
          0\scommits.+0\sfiles.+0\sdeletions.+0\sinsertions.+
          0\sseconds
        /xm
      )
    end

    it "includes generator link" do
      builder.call past, present, future
      url = "https://alchemists.io/projects/milestoner"

      expect(path.read).to include(%(Generated by <a href="#{url}">Milestoner 3.2.1</a>))
    end

    it "builds custom file" do
      settings.build_basename = "test"
      builder.call past, present, future

      expect(temp_dir.files("**/*")).to contain_exactly(temp_dir.join("0.1.0/test.html"))
    end

    it "answers file path" do
      expect(builder.call(past, present, future)).to eq(Success(path))
    end
  end
end
