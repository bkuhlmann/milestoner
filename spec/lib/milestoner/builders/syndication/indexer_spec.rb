# frozen_string_literal: true

require "spec_helper"

RSpec.describe Milestoner::Builders::Syndication::Indexer do
  using Refinements::Struct

  subject(:builder) { described_class.new }

  include_context "with application dependencies"
  include_context "with enriched tag"

  describe "#call" do
    let(:feed) { RSS::Parser.parse content }
    let(:content) { path.read }
    let(:path) { temp_dir.join "index.xml" }

    before do
      cache.write :users do |table|
        table.create Milestoner::Models::User[external_id: 1, handle: "test", name: "Test User"]
      end
    end

    it "renders logo when present" do
      settings.project_uri_logo = "https://acme.io/logo.png"
      builder.call tags

      expect(content).to include("https://acme.io/logo.png")
    end

    it "doesn't render logo when not present" do
      builder.call tags
      expect(content).not_to include("logo")
    end

    it "renders avatar" do
      builder.call tags
      expect(content).to include("https://avatars.githubusercontent.com/u/1")
    end

    it "renders insecure signature" do
      builder.call [tag.with(signature: nil)]
      expect(content).to include("ðŸ”“ Tag (insecure)")
    end

    it "renders notes" do
      builder.call tags
      expect(content).to match(/Notes.+For/m)
    end

    it "renders stats" do
      builder.call [tag]
      expect(content).to match(/1 commit.+2 files.+10 deletions.+5 insertions/m)
    end

    it "renders generator" do
      builder.call tags
      expect(content).to include("Generated by")
    end

    it "answers path when success" do
      expect(builder.call(tags)).to be_success(path)
    end
  end
end
